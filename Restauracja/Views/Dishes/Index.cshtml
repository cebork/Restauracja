@model Restauracja.ViewModels.PaginationViewModel<Restauracja.Models.Dish>
@inject IHttpContextAccessor context;
@{
    string role = context.HttpContext.Session.GetString("role");
    string firstName = context.HttpContext.Session.GetString("firstName");
    string lastName = context.HttpContext.Session.GetString("lastName");
    bool isLoggedIn = context.HttpContext.Session.TryGetValue("role", out byte[] sessionBytes1)
            && context.HttpContext.Session.TryGetValue("firstName", out byte[] sessionBytes2)
            && context.HttpContext.Session.TryGetValue("lastName", out byte[] sessionBytes3) ? true : false;
}
@{
    ViewData["Title"] = "Lista dań";
}

<section>
    <div class="container-fluid">
        <div class="row">
            <div class="d-flex justify-content-center">
                <h1 class="welcom_on_page">Lista dań</h1>
            </div>
        </div>
        <form asp-action="Index" method="get">
            <div class="mb-3">
                <label class="form-label admin_label">Fraza</label>
                <input class="form-control" value="@Context.Request.Query["searchString"]" type="text" name="searchString" />
            </div>
            <div class="mb-3">
                <label class="form-label admin_label">Cena minimalna</label>
                <input class="form-control" value="@Context.Request.Query["minPrice"]" type="number" name="minPrice" />
            </div>
            <div class="mb-3">
                <label class="form-label admin_label">Cena maksymalna</label>
                <input class="form-control" value="@Context.Request.Query["maxPrice"]" type="number" name="maxPrice" />
            </div>
            <div class="mb-3">
                <label class="form-label admin_label">Kategoria</label>
                <select asp-for="SelectedValue" asp-items="Model.DropdownValues" class="form-select" name="categoryName">
                    <option value="">Wszystkie</option>
                </select>
            </div>
            <div class="d-flex justify-content-center">
                <button type="submit" class="btn btn-success add-button">Szukaj</button>
            </div>
        </form>
        <div class="row">
            @if(isLoggedIn)
            {
                @if (role == "Admin")
                {
                    <div class="d-flex justify-content-center">
                        <a asp-action="Create"><button type="button" class="btn btn-success add-button">Dodaj</button></a>
                    </div>
                }
            }
                
        </div>
        <div class="row">
            <div class="d-flex justify-content-center admin_dishes">
                @if(Model.Items.Count > 0)
                {
                    <table class="table table-striped table-dark">
                        <thead>
                            <tr>
                                <th>Zdjęcie</th>
                                <th>Nazwa</th>
                                <th class="col-md-2">Cena [PLN]</th>
                                <th>Akcja</th>
                            </tr>
                        </thead>
                        <tbody id="userTableBody">
                            @foreach (var item in Model.Items) {
                                <tr class="dish-tr">
                                    <td class="dish-img-td">
                                        @if (!string.IsNullOrEmpty(item.Image))
                                        {
                                            <img class="dish-img-td" src="data:image;base64,@Html.DisplayFor(modelItem => item.Image)" alt="@Html.DisplayFor(modelItem => item.Name)" />
                                        }
                                        else
                                        {
                                            <img class="dish-img-td" src="~/static/Images/placeholder.jpg" alt="Brak zdjęcia" />
                                        }

                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Name)
                                    </td>
                                    <td class="col-md-2">
                                        @Html.DisplayFor(modelItem => item.Price)
                                    </td>
                                
                                    <td>
                                        <a asp-action="Details" asp-route-id="@item.DishID">Szczegóły</a>
                                        @if(isLoggedIn)
                                        {
                                            @if (role == "Admin")
                                            {
                                                @("| ")<a asp-action="Edit" asp-route-id="@item.DishID">Edycja</a>@(" |")
                                                <a asp-action="Delete" asp-route-id="@item.DishID">Usuń</a>
                                            }
                                        
                                        
                                            <div class="d-flex justify-content-center">
                                                @if(item.IsAvaliable)
                                                {
                                                    <form action="@Url.Action("ToCart", "Carts")" method="POST">
                                                        <input type="hidden" name="dish" value="@item.DishID"/>
                                                        <input min="1" class="form-control cart_amount" type="number" name="amount" value="1" />
                                                        <button class="btn btn-success add-button" type="submit">Dodaj do koszyka</button>
                                                    </form>
                                                }
                                                else
                                                {
                                                    <h3>Brak produktu</h3>
                                                }
                                            </div>
                                            @if (Model.Favourites.Any(f => f.DishID == item.DishID))
                                            {
                                                @*<a asp-action="RemoveFromFavourites" asp-route-id="@item.DishID">*@
                                                <i value="@item.DishID" id="unlikebtn" class="fa fa-heart heartStyle"></i>
                                                    @*</a>*@
                                            }
                                            else
                                            {
                                                @*<a asp-action="AddToFavourite" asp-route-id="@item.DishID">*@
                                                    <i id="likebtn" value="@item.DishID" class="fa fa-heart-o heartStyle"></i>
                                                    @*</a>*@
                                            }       
                                        }
                                    </td>
                                </tr>
                            }  
                        </tbody>
                    </table>
                }
                else
                {
                    <div class="text-white"><h2>Lista jest pusta</h2></div>
                }
                
            </div>
        </div>
        @if (Model.Items.Count > 0)
        {
            <div class="row">
                <div>
                    <div class="d-flex justify-content-center admin_dishes">
                        <p>
                            <a href="@Url.Action("Index", new { 
                                page = 0, 
                                searchString = Context.Request.Query["searchString"],
                                minPrice = Context.Request.Query["minPrice"],
                                maxPrice = Context.Request.Query["maxPrice"],
                                categoryName = Context.Request.Query["categoryName"]
                                })">
                                <button class="btn btn-primary">@("<<")</button>
                            </a>
                            <a href="@Url.Action("Index", new { 
                                page = Model.CurrentPage - 1, 
                                searchString = Context.Request.Query["searchString"],
                                minPrice = Context.Request.Query["minPrice"],
                                maxPrice = Context.Request.Query["maxPrice"],
                                categoryName = Context.Request.Query["categoryName"]
                                })">
                                <button class="btn btn-primary">@("<")</button>
                            </a>
                            <button class="btn btn-primary" disabled>@Model.CurrentPage / @Model.TotalPages (@Model.Items.Count()) </button>
                            <a href="@Url.Action("Index", new { 
                                page = Model.CurrentPage + 1,
                                searchString = Context.Request.Query["searchString"],
                                minPrice = Context.Request.Query["minPrice"],
                                maxPrice = Context.Request.Query["maxPrice"],
                                categoryName = Context.Request.Query["categoryName"]
                                })">
                                <button class="btn btn-primary">></button>
                            </a>
                            <a href="@Url.Action("Index", new { 
                                page = Model.TotalPages,
                                searchString = Context.Request.Query["searchString"],
                                minPrice = Context.Request.Query["minPrice"],
                                maxPrice = Context.Request.Query["maxPrice"],
                                categoryName = Context.Request.Query["categoryName"]
                                })">
                                <button class="btn btn-primary">>></button>
                            </a>
                        </p>
                    </div>
                </div>
            </div>
        }
        
        
    </div>
</section>

@section scripts {
    <script>
        $(document).ready(function () {
            $(document).on('click', "#likebtn", function () {
                $.ajax({
                    url: '@Url.Action("AddToFavourite", "Dishes")' + '/' + $(this).attr('value'),
                    type: 'GET',
                    dataType: 'html',
                    success: function (data) {
                        $.ajax({
                            url: '@Url.Action("Index", "Dishes")' + '@(Context.Request.QueryString)',
                            type: 'GET',
                            dataType: 'html',
                            success: function (html) {
                                // Replace the table body content with the updated HTML
                                $('#userTableBody').html($(html).find('#userTableBody').html());
                            },
                            error: function (xhr, textStatus, errorThrown) {
                                console.log('Error2: ' + errorThrown);
                            }
                        });
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        console.log('Error1: ' + errorThrown);
                    }
                });
            });
        });

        $(document).ready(function () {
            $(document).on('click', "#unlikebtn", function () {
                $.ajax({
                    url: '@Url.Action("RemoveFromFavourites", "Dishes")' + '/' + $(this).attr('value'),
                    type: 'GET',
                    dataType: 'html',
                    success: function (data) {
                        $.ajax({
                            url: '@Url.Action("Index", "Dishes")' + '@(Context.Request.QueryString)',
                            type: 'GET',
                            dataType: 'html',
                            success: function (html) {
                                // Replace the table body content with the updated HTML
                                $('#userTableBody').html($(html).find('#userTableBody').html());
                            },
                            error: function (xhr, textStatus, errorThrown) {
                                console.log('Error2: ' + errorThrown);
                            }
                        });
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        console.log('Error1: ' + errorThrown);
                    }
                });
            });
        });

    </script>
}